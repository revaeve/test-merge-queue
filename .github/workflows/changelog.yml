name: Release

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: nrwl/nx-set-shas@v3
      - run: npm ci

      - uses: nrwl/nx-set-shas@v3

      - name: Log affected directories
        run: echo ${{ steps.nx-changes.outputs.changed-dirs }}

      - name: Log latest commit message
        run: echo ${{ github.event.head_commit.message }}

      # - name: Update changelogs in affected directories
      #   run: |
      #     echo -e "\n---\n\nCommit Message: ${{ github.event.head_commit.message }}\n" >> ${{ steps.nx-changes.outputs.changed-dirs }}

      - name: Generate affected graph json
        run: npx nx affected:graph --file=affected.json

      - name: Update changelogs
        run: node scripts/update-changelogs.js
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

      - name: Show diff
        run: |
          git diff --exit-code

      - name: Commit and push changes if there are any
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git diff --exit-code || (git add . && git commit -m "Update CHANGELOG.md in affected directories" && git push)

      # script for modify changelog

      # - name: Setup Git
      #   run: |
      #     git config user.name "GitHub Bot"
      #     git config user.email "gituser@example.com"
      # - run: yarn install --frozen-lockfile
      # - name: Version
      #   shell: bash
      #   run: yarn nx affected --base=last-release --target=version
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Tag last-release
      #   shell: bash
      #   run: |
      #     git tag -f last-release
      #     git push origin last-release --force

      # - run: npx nx run-many --target=lint
      # - run: npx nx run-many --target=build
      # - run: npx nx run-many --target=test --configuration=ci
